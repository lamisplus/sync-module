{"version":3,"sources":["api.js","main/webapp/components/Sync/SyncList.js","main/webapp/components/Restore.js","main/webapp/components/Backup.js","main/webapp/components/Sync/SyncModal.js","main/webapp/components/Home.js","main/webapp/components/Settings/NewPersonalAccessToken.js","main/webapp/components/Settings/SettingList.js","main/webapp/components/Settings/index.js","main/webapp/components/Utils/PageUtils.js","main/webapp/components/Dashboard.js","main/webapp/components/TabMenu.js","App.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","tableIcons","Add","forwardRef","props","ref","react_default","a","createElement","AddBox_default","Object","assign","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","& > *","input","error","color","fontSize","success","SyncList","useHistory","classes","_useState","useState","_useState2","slicedToArray","syncList","setSyncList","_useState3","_useState4","facilities","setFacilities","_useState5","_useState6","serverUrl","setServerUrl","_useState7","_useState8","modal","setModal","toggle","_useState9","facilityId","_useState10","uploadDetails","setUploadDetails","_useState11","_useState12","saving","setSaving","_useState13","_useState14","errors","setErrors","useRef","useEffect","syncHistory","_Facilities","apply","this","arguments","Facilities","_ServerUrl","ServerUrl","_syncHistory","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","concat","baseUrl","headers","Authorization","then","response","data","catch","stop","_callee2","_context2","entries","map","_ref3","_ref4","value","label","name","id","_callee3","_context3","_ref5","_ref6","username","handleInputChange","e","objectSpread","defineProperty","target","Button","variant","className","onClick","style","textTransform","dist_default","icons","title","columns","field","filtering","row","facilityName","tableName","uploadSize","date","dateLastSync","status","processed","options","headerStyle","backgroundColor","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","Modal","isOpen","size","backdrop","Form","ModalHeader","ModalBody","Card","CardBody","Row","Col","md","FormGroup","Label","Input","type","onChange","required","_ref","key","_ref2","Spinner","startIcon","SettingsBackupRestore_default","preventDefault","temp","values","every","x","validate","post","toast","Cancel_default","@global","ul","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","heroContent","cardHeader","grey","cardPricing","justifyContent","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","DatabaseSyn","password","patDetails","setPatDetails","showModal","toggleModal","SettingList","_React$useState","React","_React$useState2","setShowModal","facility","NewPersonalAccessToken","TabExampleMenuPositionRight","console","log","Settings_SettingList","getQueryParams","params","href","queryString","RegExp","exec","Moment","locale","momentLocalizer","header","fontWeight","inforoot","dropdown","paper","marginRight","downmenu","TabPanel","children","index","other","objectWithoutProperties","Typography","component","role","hidden","aria-labelledby","Box","p","a11yProps","aria-controls","HomePage","setValue","setting","setSetting","getstate","state","urlIndex","urlTabs","anchorEl","setAnchorEl","open","Boolean","handleClose","Fragment","AppBar","position","Tabs","event","newValue","scrollButtons","indicatorColor","textColor","aria-label","Tab","icon","CloudSync_default","Settings_default","aria-haspopup","currentTarget","cursor","Menu","keepMounted","onClose","TransitionComponent","Fade","MenuItem","Sync_SyncList","Settings","index_esm","gi_index_esm","go_index_esm","TabMenu_TabPanel","App","react_router_dom","react_toastify","react_router","path","TabMenuPage","Dashboard","TabMenu","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.765644a1.chunk.js","sourcesContent":["\r\nexport const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/'\r\n//export const url =  'http://localhost:8081/api/';\r\n//export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjM0NjA3Njg2fQ.5dSt49qV22QePu-aDDhAdjZCjme8cTt8BtMIaa7KiiwRsv4CekUVJWW0V9DIJM6psbDB0I-ga_ViqF6HAyiygA';","import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"../../../../api\";\r\nimport { token as token } from \"../../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { compileString } from 'sass';\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst SyncList = (props) => {\r\n    let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [serverUrl, setServerUrl] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const defaultValues = { facilityId: \"\", serverUrl : \"\" }\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n \r\n\tconst Ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        syncHistory()\r\n        Facilities()\r\n        ServerUrl()\r\n      }, []);\r\n    \r\n          /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            temp.serverUrl  = uploadDetails.serverUrl \r\n            ? \"\"\r\n            : \"URL is required\";\r\n            \r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n        };\r\n     ///GET LIST OF Sync History\r\n    async function syncHistory() {\r\n\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}sync/facilities`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url + \" - \" + value.username,\r\n                        value: value.url,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n             \r\n            setSaving(true);\r\n           if(validate()){\r\n            axios.post(`${baseUrl}sync/upload`, uploadDetails,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Upload Successful\");\r\n                            syncHistory();\r\n                            //Closing of the modal \r\n                            toggle();\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n             }       \r\n      };\r\n\r\n    const syncDataBase =()=> {        \r\n        setModal(!modal)\r\n    }\r\n    \r\n \r\n  return (\r\n    <div>\r\n       \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={syncDataBase}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>Upload </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <br/>\r\n      <MaterialTable\r\n       icons={tableIcons}\r\n        title=\"Sync List \"\r\n        columns={[\r\n         // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Facility Name\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Table Name\", field: \"url\", filtering: false },\r\n          { title: \"Upload Size\", field: \"uploadSize\", filtering: false },\r\n          { title: \"Date of Upload \", field: \"date\", filtering: false },\r\n          { title: \"Status\", field: \"status\", filtering: false },        \r\n         \r\n        ]}\r\n        data={ syncList.map((row) => ({\r\n            //Id: manager.id,\r\n              name: row.facilityName,\r\n              url: row.tableName,\r\n              uploadSize: row.uploadSize,\r\n              date:  row.dateLastSync,\r\n              status: row.processed===0 ? \"Processing\" : \"Completed\",\r\n            \r\n            }))}\r\n       \r\n                  options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#9F9FA5\",\r\n                        color: \"#000\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n      />\r\n    \r\n    <Modal isOpen={modal} toggle={toggle} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n              <Form >\r\n             <ModalHeader toggle={toggle}>Upload</ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                  \r\n                                    <Col md={12}>\r\n                                    <FormGroup>\r\n                                    <Label >Facility *</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"facilityId\"\r\n                                                id=\"facilityId\"\r\n                                                onChange={handleInputChange}\r\n                                                required\r\n                                                >\r\n                                                <option > </option>\r\n                                                {facilities.map(({ label, value }) => (\r\n                                                    <option key={value} value={value}>\r\n                                                    {label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.facilityId !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.facilityId}</span>\r\n                                            ) : \"\" } \r\n                                    </FormGroup>\r\n                                    </Col> \r\n                                    <Col md={12}>\r\n                                    <FormGroup>\r\n                                    <Label >URL *</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"serverUrl\"\r\n                                                id=\"serverUrl\"\r\n                                                onChange={handleInputChange}\r\n                                                required\r\n                                                >\r\n                                                <option > </option>\r\n                                                {serverUrl.map(({ label, value }) => (\r\n                                                    <option key={value} value={value}>\r\n                                                    {label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.serverUrl !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.serverUrl}</span>\r\n                                            ) : \"\" } \r\n                                    </FormGroup>\r\n                                    </Col>                    \r\n                                  </Row>\r\n                                      <br/>\r\n                                      {saving ? <Spinner /> : \"\"}\r\n                                        <br />\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SettingsBackupRestoreIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                             {!saving ? (\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Upload</span>\r\n                                                ) : (\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Uploading Please Wait...</span>\r\n                                                )\r\n                                            } \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                              onClick={toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              <span style={{ textTransform: \"capitalize \" }}>cancel</span>\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SyncList;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\nconst url = 'http://lamisplus.org/base-module/api/encounters/87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e/%7BdateStart%7D/%7BdateEnd%7D'\r\nconst token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6IkVtbWEgSXNvYm9rbyIsImV4cCI6MTYxODQ5MTczOX0.bOcbjIjEdEyc_S7VfJrpgSaajHG2e_c-fAYwwGiucb2-9DXgQruW9lnuBIJzL0CZnTdevOcAsAYVy61jlFs9Kw'\r\n\r\nconst DatabaseRestore = (props) => {\r\n    const classes = useStyles()\r\n\r\n    console.log(props)\r\n\r\n\r\n\r\n  //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const DatabaseRestoreProcess = e => {\r\n      e.preventDefault()\r\n      alert(\"Processing ....\")\r\n    //Closing of the modal \r\n    props.togglestatus();\r\n                    \r\n\r\n          \r\n  }\r\n\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n              <Form >\r\n            <ModalHeader toggle={props.togglestatus}>Database Restore</ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        \r\n                                    <DropzoneArea\r\n                                        //onChange={(files) => console.log('Files:', files)}\r\n                                       // onChange = {(file1) => setFileToUpload(file1)}\r\n                                        //showFileNames=\"true\"\r\n                                        //acceptedFiles={['jar']}\r\n                                        maxFileSize ={'100000000'}\r\n            \r\n                                    />\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={6}>\r\n                                                                             \r\n                                      </Col>                   \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SettingsBackupRestoreIcon />}\r\n                                              onClick={()=> DatabaseRestoreProcess()}\r\n                                             \r\n                                          >   \r\n                                              Restore\r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                              onClick={props.togglestatus}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              Cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatabaseRestore;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\nconst url = 'http://lamisplus.org/base-module/api/encounters/87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e/%7BdateStart%7D/%7BdateEnd%7D'\r\nconst token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6IkVtbWEgSXNvYm9rbyIsImV4cCI6MTYxODQ5MTczOX0.bOcbjIjEdEyc_S7VfJrpgSaajHG2e_c-fAYwwGiucb2-9DXgQruW9lnuBIJzL0CZnTdevOcAsAYVy61jlFs9Kw'\r\n\r\nconst DataBaseUp = (props) => {\r\n    const classes = useStyles()\r\n    const manifestSamples = props.manifestSamples && props.manifestSamples !==null ? props.manifestSamples : {};\r\n    const manifestSample= Object.values(manifestSamples);\r\n    const manifestSampleForUpDateFormDataObj= Object.values(manifestSamples);\r\n    console.log(props)\r\n\r\n\r\n\r\n    const BackupProcessing = e => {\r\n     alert ('Backup Processing. Please Wait...')\r\n    props.togglestatus();\r\n                    \r\n          \r\n  }\r\n\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n\r\n            <ModalHeader toggle={props.togglestatus}>Database Backup</ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        <Alert color=\"dark\" style={{backgroundColor:'#9F9FA5', color:\"#000\" , fontWeight: 'bolder', fontSize:'14px'}}>\r\n                                            <p style={{marginTop: '.7rem' }}>\r\n                                                Info : &nbsp;&nbsp;&nbsp;<span style={{ fontWeight: 'bolder'}}>{'Are you Sure want to continue'}</span>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                               \r\n                                            </p>\r\n\r\n                                        </Alert>\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={6}>\r\n                                                                             \r\n                                      </Col>                   \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<BackupIcon />}\r\n                                              onClick={()=>BackupProcessing()}\r\n                                             \r\n                                          >   \r\n                                              BackUp\r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                              onClick={props.togglestatus}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              Cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataBaseUp;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\nconst url = 'http://lamisplus.org/base-module/api/encounters/87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e/%7BdateStart%7D/%7BdateEnd%7D'\r\nconst token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6IkVtbWEgSXNvYm9rbyIsImV4cCI6MTYxODQ5MTczOX0.bOcbjIjEdEyc_S7VfJrpgSaajHG2e_c-fAYwwGiucb2-9DXgQruW9lnuBIJzL0CZnTdevOcAsAYVy61jlFs9Kw'\r\n\r\nconst DatabaseSyn = (props) => {\r\n    const classes = useStyles()\r\n\r\n    console.log(props)\r\n\r\n\r\n\r\n  //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const DatabaseSynProcess = e => {\r\n      e.preventDefault()\r\n      alert(\"Processing \")\r\n    //Closing of the modal \r\n    props.togglestatus();\r\n                    \r\n\r\n          \r\n  }\r\n\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.modal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n             <ModalHeader toggle={props.toggle}>Upload </ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        \r\n                                    <Alert color=\"dark\" style={{backgroundColor:'#9F9FA5', color:\"#000\" , fontWeight: 'bolder', fontSize:'14px'}}>\r\n                                            <p style={{marginTop: '.7rem' }}>\r\n                                                Info : &nbsp;&nbsp;&nbsp;<span style={{ fontWeight: 'bolder'}}>{'Are you Sure want to continue'}</span>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                               \r\n                                            </p>\r\n\r\n                                        </Alert>\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={6}>\r\n                                                                             \r\n                                      </Col>                   \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SettingsBackupRestoreIcon />}\r\n                                              onClick={()=>DatabaseSynProcess()}\r\n                                             \r\n                                          >   \r\n                                              upload \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                              onClick={props.togglestatus}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatabaseSyn;\r\n","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport DatabaseRestore from './Restore';\r\nimport DataBaseUp from './Backup';\r\nimport DatabaseSyn from './Sync/SyncModal'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbar: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardPricing: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'baseline',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    marginTop: theme.spacing(8),\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: theme.spacing(6),\r\n      paddingBottom: theme.spacing(6),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function ExportImport() {\r\n  const classes = useStyles();\r\n  const [modal3, setModal3] = useState(false)//modal to View Backup\r\n  const togglemodal3 = () => setModal3(!modal3)\r\n  const [modal2, setModal2] = useState(false)//modal to View Restore\r\n  const togglemodal2 = () => setModal2(!modal2)\r\n  const [modal, setModal] = useState(false)//modal to View Restore\r\n  const togglemodal = () => setModal(!modal)\r\n  const [collectmodal, setcollectmodal] = useState([])//to collect array of datas into the modal and pass it as props\r\n  let history = useHistory();\r\n  function DatabaseModal (){\r\n    setcollectmodal();\r\n    setModal3(!modal3) \r\n  }\r\n\r\n  function DatabaseSynModal (){\r\n    setModal(!modal) \r\n  }\r\n  function syncLink(){\r\n      history.push('/sync')\r\n  }\r\n  function DatabaseRestoreModal (){\r\n    setModal2(!modal2) \r\n  }\r\n  const  settings =()=> {        \r\n        history.push('/settings')\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>  \r\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n        \r\n      </Container>\r\n      {/* End hero unit */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n      <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={settings}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>Setting</span>\r\n        </Button>\r\n        <Grid container spacing={5} alignItems=\"flex-end\">\r\n         \r\n           <Grid item  xs={12} sm={12} md={4}>\r\n              <Card>\r\n                <CardHeader\r\n                  title='Database BackUp'\r\n                  titleTypographyProps={{ align: 'center' }}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  <div className={classes.cardPricing}>\r\n                    <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\">\r\n                       <BackupIcon  style={{ fontSize: 60 }}/> \r\n                    </Typography>\r\n                    \r\n                  </div>\r\n                  \r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant=\"contained\" color=\"primary\" onClick={() => DatabaseModal()}>\r\n                    BackUp\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item  xs={12} sm={12} md={4}>\r\n              <Card>\r\n                <CardHeader\r\n                  title='Database Restore'\r\n                  titleTypographyProps={{ align: 'center' }}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  <div className={classes.cardPricing}>\r\n                    <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\">\r\n                    <RestoreIcon  style={{ fontSize: 60 }}/> \r\n                    </Typography>\r\n                    \r\n                  </div>\r\n                  \r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant=\"contained\" onClick={()=>DatabaseRestoreModal()}>\r\n                    Restore\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item  xs={12} sm={12} md={4}>\r\n              <Card>\r\n                <CardHeader\r\n                  title='Database Sync'\r\n                  titleTypographyProps={{ align: 'center' }}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  <div className={classes.cardPricing}>\r\n                    <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\">\r\n                      <SettingsBackupRestoreIcon  style={{ fontSize: 60 }}/> \r\n                    </Typography>\r\n                    \r\n                  </div>\r\n                 \r\n                </CardContent>\r\n                <CardActions>\r\n                \r\n                  <Button fullWidth variant=\"contained\" color=\"primary\" onClick={()=>syncLink()}>\r\n                  \r\n                    Sync\r\n                   \r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <DataBaseUp modalstatus={modal3} togglestatus={togglemodal3} /> \r\n      <DatabaseRestore modalstatus={modal2} togglestatus={togglemodal2} />\r\n      <DatabaseSyn modalstatus={modal} togglestatus={togglemodal}  />\r\n    </React.Fragment>\r\n  );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody, FormGroup, Input, Label} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"../../../../api\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token } from \"../../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst DatabaseSyn = (props) => {\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.username = patDetails.username\r\n        ? \"\"\r\n        : \"Username is required\";\r\n        temp.password = patDetails.password\r\n        ? \"\"\r\n        : \"Password is required\";\r\n        temp.url = patDetails.url\r\n        ? \"\"\r\n        : \"Server URL is required\";\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n            if (validate()) {      \r\n                    setSaving(true);\r\n                    axios.post(`${baseUrl}sync/remote-access-token`,patDetails,\r\n                     { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.ServerUrl()\r\n                            toast.success(\"Token Generated Successful\");\r\n                            props.toggleModal()\r\n\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n            };\r\n        }\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n              <Form >\r\n             <ModalHeader toggle={props.toggleModal}>Personal Access Token </ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n\r\n                                <Col md={12}>\r\n                      <FormGroup>\r\n                      <Label >Server URL * </Label>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"url\"\r\n                                  id=\"url\"\r\n                                  value={patDetails.url} \r\n                                  onChange={handleInputChange}\r\n                                  required\r\n                                  />\r\n                                  {errors.url !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.url}</span>\r\n                                            ) : \"\" }   \r\n                      </FormGroup>\r\n                    </Col>                \r\n                    <Col md={12}>\r\n                  <FormGroup>\r\n                  <Label >Username </Label>\r\n                          <Input\r\n                              type=\"text\"\r\n                              name=\"username\"\r\n                              id=\"username\" \r\n                              value={patDetails.username}\r\n                              onChange={handleInputChange}\r\n                              required\r\n                              />\r\n                        {errors.username !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.username}</span>\r\n                                            ) : \"\" }\r\n                  </FormGroup>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                  <FormGroup>\r\n                  <Label >Password </Label>\r\n                          <Input\r\n                              type=\"password\"\r\n                              name=\"password\"\r\n                              id=\"password\" \r\n                              value={patDetails.password}\r\n                              onChange={handleInputChange}\r\n                              required\r\n                              />\r\n                        {errors.password !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.password}</span>\r\n                                            ) : \"\" }\r\n                  </FormGroup>\r\n                  </Col>                    \r\n                </Row>\r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br/>              \r\n                        <Button\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            \r\n                            //startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}\r\n                            \r\n                        >   \r\n                            <span style={{ textTransform: \"capitalize \" }}>Connect & Generate Token</span>  \r\n                        </Button>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatabaseSyn;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"../../../../api\";\r\nimport { token as token } from \"../../../../api\";\r\nimport NewPersonalAccessToken from './NewPersonalAccessToken'\r\n\r\nimport { forwardRef } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SettingList = (props) => {\r\n    let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [serverUrl, setServerUrl] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const toggleModal = () => setShowModal(!showModal)\r\n  const defaultValues = { facility: \"\", url: \"\" }\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n \r\n\tconst Ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        ServerUrl()\r\n      }, []);\r\n\r\n    \r\n    \r\n    ///GET LIST OF Remote URL\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(response.data)\r\n                \r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n\r\n    const syncDataBase =()=> {        \r\n        setShowModal(!showModal)\r\n    }\r\n    \r\n \r\n  return (\r\n    <div>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={syncDataBase}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>New Personal Access Token </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <br/>\r\n      <MaterialTable\r\n       icons={tableIcons}\r\n        title=\"Personal Access Token List\"\r\n        columns={[\r\n         // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"URLS\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Username\", field: \"url\", filtering: false },\r\n          { title: \" Status\", field: \"date\", filtering: false },\r\n        //   { title: \"Action\", field: \"status\", filtering: false },\r\n         \r\n         \r\n        ]}\r\n        data={ serverUrl.map((row) => ({\r\n            //Id: manager.id,\r\n              name: row.url,\r\n              url: row.username,\r\n              date:  \"Active\",\r\n              //status: \"Active\",\r\n            \r\n            }))}\r\n       \r\n                  options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#9F9FA5\",\r\n                        color: \"#000\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n      />\r\n    \r\n    <NewPersonalAccessToken toggleModal={toggleModal} showModal={showModal} ServerUrl={ServerUrl}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingList;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"../../../../api\";\r\nimport { token as token } from \"../../../../api\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport SettingList from './SettingList' \r\n\r\n\r\n\r\n\r\n\r\nconst TabExampleMenuPositionRight = (props) => {\r\n\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              //{ headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  console.log(response.data)\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n      console.log(patDetails)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      console.log(patDetails)\r\n      e.preventDefault();      \r\n      setSaving(true);\r\n      axios.post(`${baseUrl}sync/remote-access-token`,\r\n     // { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n      patDetails\r\n      )\r\n                  .then(response => {\r\n                      setSaving(false);\r\n                      toast.success(\"Token Generated Successful\");\r\n\r\n                  })\r\n                  .catch(error => {\r\n                      setSaving(false);\r\n                      toast.error(\"Something went wrong\");\r\n                  });\r\n    };\r\n\r\n\r\n\r\n\r\n  return (    \r\n          \r\n          <SettingList />\r\n        )\r\n\r\n}\r\n\r\nexport default TabExampleMenuPositionRight","export const getQueryParams = (params, url) => {\n    let href = url;\n    //this expression is to get the query strings\n    let reg = new RegExp(\"[?&]\" + params + \"=([^&#]*)\", \"i\");\n    let queryString = reg.exec(href);\n    return queryString ? queryString[1] : null;\n};","import React, {useEffect, useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\nimport {getQueryParams} from \"./../components/Utils/PageUtils\";\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade'\r\nimport SyncList from './Sync/SyncList';\r\nimport Setting from './Settings/index'\r\n// import RestoreIcon from '@material-ui/icons/Restore';\r\n// import SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n// import BackupIcon from '@material-ui/icons/Backup';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport CloudSyncIcon from '@mui/icons-material/CloudSync';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  inforoot: {\r\n    margin: \"5px\",\r\n  },\r\n\r\n  dropdown: {\r\n    marginTop :\"50px\"\r\n   \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  downmenu: {\r\n    display: 'flex'\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={5}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\nfunction HomePage(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(null);\r\n  \r\n  const [setting, setSetting] = useState(false);\r\n  const getstate= props.location && props.location.state ? props.location.state : \" \" ;\r\n  const urlIndex = getQueryParams(\"tab\", props.location && props.location.search ? props.location.search : \"\"); \r\n  const urlTabs = urlIndex !== null ? urlIndex : getstate ;\r\n  useEffect ( () => {\r\n\r\n    switch(urlTabs){  \r\n      case \"database-sync\": return setValue(0)\r\n      case \"setting\": return setValue(1)\r\n\r\n      default: return setValue(0)\r\n    }\r\n  }, [urlIndex]);\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n/*Tab Dropdown   */\r\nconst [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setValue(1)\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setSetting(true)\r\n  };\r\n\r\n  const settingDropdown = () => {\r\n    handleClose()\r\n    setSetting(true)\r\n  };\r\n\r\n/*Tab Dropdown   */\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"inherit\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n            \r\n          {/* <Tab className={classes.title} label=\"Database Backup\" icon={<BackupIcon />} {...a11yProps(0)}/>      \r\n          <Tab className={classes.title} label=\"Database Restore\" icon={<RestoreIcon />} {...a11yProps(1)}/> */}\r\n          <Tab className={classes.title} label=\"Database Sync\" icon={<CloudSyncIcon style={{ color:'#fff'}}/>} {...a11yProps(0)} />\r\n          <Tab className={classes.title} label=\"Setting\" icon={<SettingsIcon />} {...a11yProps(1)} \r\n          aria-controls=\"fade-menu\" aria-haspopup=\"true\"  onClick={handleClick} style={{cursor:\"pointer\"}}/>\r\n         \r\n      </Tabs>\r\n      </AppBar>\r\n\r\n      <Menu\r\n        id=\"fade-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n        className={classes.dropdown}\r\n      >\r\n        <MenuItem onClick={settingDropdown}>Personal Access Token</MenuItem>\r\n        \r\n      </Menu>\r\n\r\n      \r\n\r\n        <TabPanel value={value} index={0}>\r\n          <SyncList />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n            {setting===true && value===1 ? (\r\n              <Setting />\r\n            )\r\n            : \"\"\r\n            }\r\n        </TabPanel>\r\n        \r\n     </div> \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default HomePage;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { MdDashboard , MdFileUpload} from \"react-icons/md\";\r\nimport { GiTestTubes,GiFiles, GiDrippingTube } from \"react-icons/gi\";\r\nimport { GoRepoClone} from \"react-icons/go\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\nimport {getQueryParams} from \"./../components/Utils/PageUtils\";\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade'\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  inforoot: {\r\n    margin: \"5px\",\r\n  },\r\n\r\n  dropdown: {\r\n    marginTop :\"50px\"\r\n   \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  downmenu: {\r\n    display: 'flex'\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={5}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\nfunction HomePage(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(null);\r\n  const getstate= props.location && props.location.state ? props.location.state : \" \" ;\r\n  const urlIndex = getQueryParams(\"tab\", props.location && props.location.search ? props.location.search : \"\"); \r\n  const urlTabs = urlIndex !== null ? urlIndex : getstate ;\r\n  useEffect ( () => {\r\n    switch(urlTabs){  \r\n      case \"collect-sample\": return setValue(1)\r\n      case \"sample-verification\": return setValue(2)\r\n      case \"test-result\": return setValue(3)\r\n      // case \"radiology\": return setValue(4)\r\n      case \"dispatched-sample-list\" : return setValue(4)\r\n\r\n      default: return setValue(0)\r\n    }\r\n  }, [urlIndex]);\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n/*Tab Dropdown   */\r\nconst [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n/*Tab Dropdown   */\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"inherit\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n            \r\n          <Tab className={classes.title} label=\"Summary View\" icon={<MdDashboard />} {...a11yProps(0)}\r\n           \r\n          \r\n          /> \r\n          \r\n          <Tab className={classes.title} label=\"Analytics\" icon={<GiTestTubes />} {...a11yProps(1)} \r\n          aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}\r\n          \r\n          />\r\n          <Tab className={classes.title} label=\"User Management\" icon={<GiDrippingTube style={{ color:'#fff'}}/>} {...a11yProps(2)} />\r\n          <Tab className={classes.title} label=\"Reports\" icon={<GoRepoClone />} {...a11yProps(3)} />\r\n          {/* <Tab className={classes.title} label=\"Radiology Uploads\" icon={<MdFileUpload />} {...a11yProps(4)} /> */}\r\n          <Tab className={classes.title} label=\"Builder\" icon={<GiFiles />} {...a11yProps(4)} />\r\n      </Tabs>\r\n      </AppBar>\r\n\r\n      <Menu\r\n        id=\"fade-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n        className={classes.dropdown}\r\n      >\r\n        <MenuItem onClick={handleClose}>Application CodeSet</MenuItem>\r\n        <MenuItem onClick={handleClose}>Global veriable</MenuItem>\r\n        <MenuItem onClick={handleClose}>Interational Standard Setup</MenuItem>\r\n        <MenuItem onClick={handleClose}>Ward Manager</MenuItem>\r\n      </Menu>\r\n\r\n      \r\n      <TabPanel value={value} index={0}>\r\n          \r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n          \r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n          \r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n         \r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={4}>\r\n          <RadiologyTestSearch />\r\n      </TabPanel> */}\r\n      <TabPanel value={value} index={4}>\r\n        \r\n      </TabPanel>\r\n        \r\n     </div> \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport SyncList from './main/webapp/components/Sync/SyncList';\n\nimport HomePage from './main/webapp/components/Home'\nimport SettingPage from './main/webapp/components/Settings'\nimport Dashboard from './main/webapp/components/Dashboard'\nimport TabMenu from './main/webapp/components/TabMenu'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n      <ToastContainer />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/sync\">\n            <TabMenuPage />\n          </Route>\n          <Route path=\"/settings\">\n            <SettingPage />\n          </Route>\n          <Route path=\"/\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/tab-menu\">\n            <TabMenuPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <Dashboard />;\n}\nfunction SyncListPage() {\n  return <SyncList />;\n}\n\nfunction TabMenuPage() {\n  return <TabMenu />;\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}